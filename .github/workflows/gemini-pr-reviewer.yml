name: 'Gemini PR Reviewer'

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: 'read'
  pull-requests: 'write'

jobs:
  review-pr:
    runs-on: 'ubuntu-latest'
    steps:
      # Step 1: Check out the code from the PR branch
      - uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0 # Fetches full history to allow diffing

      # Step 2: Calculate the difference between the PR branch and the base branch
      - name: 'Calculate diff'
        id: 'diff'
        run: |
          # The target branch is available in the event payload
          git fetch origin ${{ github.event.pull_request.base.ref }}
          # The `|| true` prevents the workflow from failing if there are no changes
          git diff --no-color origin/${{ github.event.pull_request.base.ref }} > diff.txt || true
          echo "diff_output=$(cat diff.txt)" >> "$GITHUB_OUTPUT"

      # Step 3: Run Gemini CLI with the diff as input
      - name: 'Run Gemini Review'
        id: 'gemini'
        uses: 'google-github-actions/run-gemini-cli@main'
        with:
          gemini_api_key: '${{ secrets.GEMINI_API_KEY }}'
          prompt: |
            You are an expert Google engineer performing a code review.
            Your goal is to provide a concise, helpful summary of the following code changes.
            Identify any potential issues, bugs, or areas for improvement in this Python/Flask project.
            Provide specific code suggestions for improvement if you find any.

            Here is the diff of the changes:
            ```diff
            ${{ steps.diff.outputs.diff_output }}
            ```

      # Step 4: Post the review as a comment on the PR
      - name: 'Comment on PR'
        uses: 'actions/github-script@v7'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### ðŸ¤– Gemini PR Review\n\n${{ steps.gemini.outputs.text }}`
            })
